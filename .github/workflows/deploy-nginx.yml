name: Deploy Nginx to AWS ECS

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  DOCKERHUB_REPOSITORY: duoc/img
  ECS_CLUSTER: cluster-duoc-2025
  ECS_SERVICE: my-nginx-service
  ECS_TASK_DEFINITION: ecs-task-definition.json
  CONTAINER_NAME: nginx-container

jobs:
  deploy:
    name: Build & Deploy Nginx
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push Docker image to Docker Hub
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Construir la imagen con m√∫ltiples tags
          docker build -t $DOCKERHUB_REPOSITORY:$IMAGE_TAG -t $DOCKERHUB_REPOSITORY:latest ./docker
          
          # Subir la imagen a Docker Hub
          docker push $DOCKERHUB_REPOSITORY:$IMAGE_TAG
          docker push $DOCKERHUB_REPOSITORY:latest

      # - name: Replace image tag in ECS task definition
      #   run: |
      #     IMAGE_TAG=${{ github.sha }}  # Usa el SHA del commit como tag
      #     DOCKERHUB_REPOSITORY=${{ env.DOCKERHUB_REPOSITORY }}

      #     # Reemplaza la imagen en el archivo JSON
      #     sed -i "s|\${DOCKERHUB_REPOSITORY}:\${IMAGE_TAG}|$DOCKERHUB_REPOSITORY:$IMAGE_TAG|g" ecs-task-definition.json

      # - name: Update ECS Task Definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #   with:
      #     task-definition: ${{ env.ECS_TASK_DEFINITION }}
      #     container-name: ${{ env.CONTAINER_NAME }}
      #     image: ${{ env.DOCKERHUB_REPOSITORY }}:${{ github.sha }}

      # - name: Deploy updated ECS service
      #   run: |
      #     aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
